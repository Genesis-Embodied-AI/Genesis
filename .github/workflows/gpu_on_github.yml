name: Production

on:
  # Trigger the workflow on push on the master branch, or for any pull request
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Cancel all workflows that are stil running if any when updating branches associated with PRs,
  # BUT don't do anything for workflows that are not triggered by PRs.
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  linux-gpu:
    # run on github gpu runner
    runs-on: gpu-t4-4-core

    env:
      # Note that secrets are not passed to workflows that are triggered by a pull request from a fork
      HF_HUB_DOWNLOAD_TIMEOUT: 60
      FORCE_COLOR: 1
      PY_COLORS: 1
      MADRONA_DISABLE_CUDA_HEAP_SIZE: "1"
      OMNI_KIT_ACCEPT_EULA: "yes"
      OMNI_KIT_ALLOW_ROOT: "1"
      GS_BACKEND: "gpu"
      GS_USE_NDARRAY: "0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install python dependencies
        run: |
          pip install --upgrade pip setuptools pkg-info wheel
          pip install torch

      - name: Install Genesis
        run: |
          pip install -e '.[dev]'

      - name: Get gstaichi version
        id: gstaichi_version
        shell: bash
        run: |
          GSTAICHI_VERSION=$(python -c "import importlib.metadata ; print(importlib.metadata.version('gstaichi'))")
          echo "GSTAICHI_VERSION=${GSTAICHI_VERSION}"
          echo "GSTAICHI_VERSION=${GSTAICHI_VERSION}" >> $GITHUB_OUTPUT

      - name: Restore Taichi Kernel Cache
        if: always()
        uses: actions/cache/restore@v4
        with:
          path: .cache
          key: ubuntu-24.04-3.10-${{ steps.gstaichi_version.outputs.GSTAICHI_VERSION }}
          restore-keys: |
            ubuntu-24.04-3.10-${{ steps.gstaichi_version.outputs.GSTAICHI_VERSION }}-

      - name: Run unit tests
        if: github.event_name == 'pull_request'
        run: |
          pip install --no-input --extra-index-url https://pypi.nvidia.com/ omniverse-kit
          pip install --no-input ".[dev,render,usd]"

          pytest -v --backend gpu --dev -n 1 -m required --forked --logical "tests/test_rigid_physics.py"
